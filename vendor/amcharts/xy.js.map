{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif(axis.get(\"zoomable\")){\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif(axis.get(\"zoomable\")){\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\t\t\t\n\t\t\tif(Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\") {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\t\t\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\t\t\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\t\n\n\tprotected _nextTime(time:number, count:number, baseInterval:ITimeInterval){\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\t\t\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif(result.index >= len){\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time:number, count:number, _baseInterval:ITimeInterval){\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif(min > max){\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\t\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif(step == 0){\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\t\t\t\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\t\t\t\t\t\t\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","Math","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","min","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","_fy","reverse","prevBottom","bounds","classNames","concat","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","fill","fromHex","fillOpacity","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","key","dir","focused","m","nextPosition","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","_dispose","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","remove","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisBullet","uid","AxisLabel","AxisLabelRadial","AxisRenderer","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","once","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_handleRangeChange","_dataGrouped","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstTime","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","current","modifiedDifference","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","firstDate","outOfSelection","_adjustStartIndex","_markDirtyPrivateKey","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_getMinorInterval","minorGridInterval","_prepareAxisItems","nextGridUnit","format","previousValue","formats","minorLabelsEnabled","minorGridEnabled","minorDuration","_dataItems","processDataItem","date","dateFormatter","labelEndValue","minorTimeUnit","minorCount","mmm","previousMinorValue","minorValue","minorFormats","minorDataItem","minorDataItems","minorEndValue","minorLabel","j","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","_handleSizeDirty","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","firstDay","NaN","adjustPosition","snap","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","positionToDate","dateToPosition","dtime","tooltipValue","_nextTime","GaplessDateAxis","valueFields","_getDates","_customDates","_dates","dates","found","_updateAllDates","extraMax","extraMin","len","baseCount","unshift","itemValue","valueToIndex","findex","floor","startValue","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","_frequency","realDuration","now","previousDataItem","selectedItems","_getIndexes","_m","_addMinorGrid","timeUnit2","previousLabel","worse","_pickWorse","dataItemA","dataItemB","valueA","valueB","getDate","mTimeUnit","maxValue","minorSelectedItems","firstValue","items","c","fullDuration","originalValue","realValue","_hasDate","_baseInterval","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_valuesDirty","_getMinMax","_getSelectionMinMax","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","decCount","fillEndPosition","labelEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","selectionStrictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","ds","setting","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","stroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","dataSet","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","markDirtyText","hideTooltip","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","minSelection","dl","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}